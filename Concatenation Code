import os
import shutil
import pandas as pd

def convert_excel_to_csv(file_path):
    csv_path = os.path.splitext(file_path)[0] + "_temp.csv"
    pd.read_excel(file_path, header=None).to_csv(csv_path, index=False, header=None)
    return csv_path

def process_csv_file(csv_path):
    df = pd.read_csv(csv_path, header=None)
    for col in df.columns:
        header = f"{df.iloc[0, col]} {df.iloc[1, col]}"
        df.iloc[0, col] = header
    return df

def save_processed_data(df, file_path):
    df.to_excel(file_path, index=False, header=None)

def concatenate_files(folder_path, output_folder_path_0, output_folder_path_1, file_order):
    target_extensions = [".xlsx"]
    keywords = ["shooting", "keeper", "passing", "passing-types", "gca", "defense", "possession", "misc"]

    processed_file_count = 0

    for file in os.listdir(folder_path):
        if file.count("_") == 2 and file.endswith(tuple(target_extensions)):
            suffix = file.split("_")[2].split(".")[0]
            matching_keyword = next((key for key in keywords if key in suffix), None)
            if matching_keyword:
                file_path = os.path.join(folder_path, file)
                csv_path = convert_excel_to_csv(file_path)
                df = process_csv_file(csv_path)
                save_processed_data(df, file_path)
                os.remove(csv_path)
                df = pd.read_excel(file_path)
                df = df.drop(0)
                df.to_excel(file_path, index=False)
                processed_file_count += 1

                # キーワードに一致した場合は処理を実行し、別のフォルダに移動
                output_file_path = os.path.join(output_folder_path_0, file)
                os.rename(file_path, output_file_path)
            else:
                # キーワードに一致しなかった場合も別のフォルダに移動
                output_file_path = os.path.join(output_folder_path_0, file)
                shutil.move(os.path.join(folder_path, file), output_file_path)

    # ファイル名に"_"が２個含まれるファイルを抽出
    target_files = [file for file in os.listdir(output_folder_path_0) if file.count('_') == 2]

    # ファイル名の二個目の"_"より前すべてを共通とするファイルをグループ化
    file_groups = {}
    for target_file in target_files:
        group_key = '_'.join(target_file.split('_')[:-1])
        if group_key in file_groups:
            file_groups[group_key].append(target_file)
        else:
            file_groups[group_key] = [target_file]

    # 各グループに対して横向きに連結し、新しいExcelファイルとして保存
    for group_key, group_files in file_groups.items():
        dfs = {}
        for file_name in file_order:
            for target_file in group_files:
                if file_name in target_file:
                    file_path = os.path.join(output_folder_path_0, target_file)
                    df = pd.read_excel(file_path)

                    # 行全体が空欄でない場合のみ連結
                    if not df.dropna().empty:
                        # 各ファイルの一列目の値が同じもの同士を同じ行になるように連結
                        if group_key in dfs:
                            existing_df = dfs[group_key]
                            existing_df = existing_df[~existing_df.index.duplicated(keep='first')]
                            df = pd.concat([existing_df.set_index(existing_df.columns[0]), df.set_index(df.columns[0])], axis=1)
                            df.reset_index(inplace=True)
                            dfs[group_key] = df
                        else:
                            dfs[group_key] = df

        # すべてのデータフレームを横向きに連結
        if group_key in dfs:
            result_df = pd.concat(list(dfs.values()), axis=1)

            # 空白行がない場合のみ結果を出力
            if not result_df.dropna().empty:
                output_file_name = f'{group_key}.xlsx'
                output_file_path = os.path.join(output_folder_path_1, output_file_name)
                result_df.to_excel(output_file_path, index=False)  # 出力先のExcelファイルを指定

    # 処理完了メッセージを表示
    print("横向き連結完了")


    # フォルダ内の残ったExcelファイルもC:/Users/masap/athletic_0.5にコピー
    remaining_files = [file for file in os.listdir(folder_path) if file.endswith(".xlsx")]
    for remaining_file in remaining_files:
        shutil.copy(os.path.join(folder_path, remaining_file), os.path.join(output_folder_path_0, remaining_file))

def process_excel_files(directory_path, output_folder_path_0):
    # ディレクトリ内のファイルを取得
    files = os.listdir(directory_path)

    # "_"が1個含まれるExcelファイルの処理
    for file in files:
        if "_" in file and file.endswith(".xlsx"):
            file_path = os.path.join(directory_path, file)

            # Excelファイルを読み込む
            df = pd.read_excel(file_path)

            # 一列目が空欄の行に処理を実行
            for index, row in df.iterrows():
                if pd.isnull(row.iloc(0)):
                    # ファイル名の"_"より後ろの文字列と"_sum"を結合して新しい文字列を挿入
                    new_value = file.split("_", 1)[1].split(".")[0] + "_sum"
                    df.at[index, df.columns[0]] = new_value

            # Excelファイルに変換して元のファイル名で保存
            excel_file_path = os.path.join(output_folder_path_0, file)
            df.to_excel(excel_file_path, index=False)

    print("処理が完了しました。")
    

if __name__ == "__main__":
    folder_path = "C:/Users/masap/athletic_0"
    output_folder_path_0 = "C:/Users/masap/athletic_0.5"
    output_folder_path_1 = "C:/Users/masap/athletic_1"

    # "_"が2個含まれるExcelファイルを横向きに連結
    concatenate_files(folder_path, output_folder_path_0, output_folder_path_1, ["schedule","shooting", "keeper", "passing", "passing-types", "gca", "defense", "possession", "misc"])

    # その他の処理
    process_excel_files(folder_path, output_folder_path_0)
